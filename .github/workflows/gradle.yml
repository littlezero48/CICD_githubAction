# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI/CD with Gradle

on:                                                               # 워크플로우를 실행할 이벤트 종류와 특정 브랜치 설정
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:                                                              # 환경 설정
  AWS_REGION: ap-northeast-2
  S3_BUCKET_NAME: littlezerobucket
  CODE_DEPLOY_APPLICATION_NAME: CICD_githubActions
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: littlezero-ec2-deploy        # IAM의 CodeDeploy용 역할

permissions:                                                      # 권한 설정
  contents: read

jobs:                                                             # 수행할 워크플로우 
  deploy:                                                         # Deploy
    name: Deploy
    runs-on: ubuntu-latest                                        # 빌드가 실행할 OS

    steps:                                                        # 단계 설정

    # 체크아웃
    - name: Checkout
      uses: actions/checkout@v3                                   # 워크플로우 실행전 체크아웃

    # JDK 11 세팅
    - name: Set up JDK 11                                         # JDK 11 버전 설치
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'

    # BUILD 권한 부여
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
      # Build

    # BUILD
    - name: Build with Gradle                                     # gradle로 빌드 실행
      uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
      with:
        arguments: clean build

    # AWS 인증
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}


      # 빌드한 파일 S3 버킷에 업로드
    - name: Upload to AWS S3
      run: |
        aws deploy push \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --ignore-hidden-files \
          --s3-location s3://$S3_BUCKET_NAME/$GITHUB_SHA.zip \
          --source .

      # S3 버킷에 올린 파일로 CodeDeploy 실행
    - name: Deploy to AWS EC2 from S3
      run: |
        aws deploy create-deployment \
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$S3_BUCKET_NAME,key=$GITHUB_SHA.zip,bundleType=zip